<mvvm:MvxWpfView x:Class="BTH.WPF.Views.CoBaUsersView"
                 xmlns:mvvm="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                 xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:converters="clr-namespace:BTH.WPF.Converters"
                 xmlns:c="clr-namespace:BTH.WPF.Controls"
                 TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 Background="{DynamicResource MaterialDesignPaper}"
                 TextElement.FontWeight="Medium"
                 TextElement.FontSize="14"
                 FontFamily="{md:MaterialDesignFont}"
                 Name="UsersView"
                 mc:Ignorable="d" 
                 d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <DockPanel Grid.ZIndex="1"  Margin="10" LastChildFill="True" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}">
            <Grid DockPanel.Dock="Top" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Button Margin="10"
                    Style="{DynamicResource MaterialDesignOutlinedButton}"
                    Command="{Binding LoadFileCommand}"
                    Content="Datei laden...">
                </Button>
            </Grid>
            <Grid>
                <ItemsControl Name="UserList" ItemsSource="{Binding UserViewModels}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Name="WrapPanel"></WrapPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <md:Flipper Style="{StaticResource MaterialDesignCardFlipper}" Width="300" Height="auto">
                                <md:Flipper.FrontContent>
                                    <Grid>
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:Flipper.FlipCommand}">
                                                    <md:PackIcon Kind="Edit"></md:PackIcon>
                                                </Button>
                                            </StackPanel>
                                            <Button Style="{StaticResource MaterialDesignOutlinedButton}"
                                                    Command="{Binding UserLoginCommand}"
                                                    Foreground="White"
                                                    BorderThickness="0"
                                                    Height="auto">
                                                <Button.Content>
                                                    <StackPanel Margin="8">
                                                        <TextBlock Style="{StaticResource MaterialDesignHeadline5TextBlock}" Text="{Binding User.Name}" Width="284"></TextBlock>
                                                        <TextBlock Style="{StaticResource MaterialDesignCaptionTextBlock}" Text="{Binding User.IBAN}"></TextBlock>
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </md:Flipper.FrontContent>
                                <md:Flipper.BackContent>
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Column="0" Style="{StaticResource MaterialDesignFlatButton}"
                                                    Command="{x:Static md:Flipper.FlipCommand}">
                                                <md:PackIcon Kind="ArrowLeft"></md:PackIcon>
                                            </Button>
                                            <Button Grid.Column="2" Style="{StaticResource MaterialDesignFlatAccentButton}"
                                                    Command="{Binding UserSaveCommand}"
                                                    CommandParameter="{Binding}">
                                                <md:PackIcon Kind="Check"></md:PackIcon>
                                            </Button>
                                        </Grid>
                                        <StackPanel Margin="8">
                                            <TextBox Text="{Binding User.Name}"
                                                     md:HintAssist.Hint="Name"
                                                     md:HintAssist.IsFloating="True"
                                                     Width="284"></TextBox>
                                        </StackPanel>
                                    </StackPanel>
                                </md:Flipper.BackContent>
                            </md:Flipper>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </DockPanel>
        <md:Card
            Grid.ZIndex="2"
            UniformCornerRadius="14"
            Width="28"
            Height="28"
            RenderTransformOrigin=".5,.5"
            Padding="4">
            <ProgressBar
                Style="{StaticResource MaterialDesignCircularProgressBar}"
                Value="0"
                IsIndeterminate="True"
                x:Name="AnimatedProgressInCard" />
            <md:Card.RenderTransform>
                <TransformGroup>
                    <ScaleTransform
                        x:Name="ScaleTransform"
                        ScaleX="0"
                        ScaleY="0" />
                </TransformGroup>
            </md:Card.RenderTransform>
            <md:Card.Style>
                <Style TargetType="md:Card" BasedOn="{StaticResource {x:Type md:Card}}">
                    <Style.Resources>
                        <Storyboard
                            x:Key="FadeIn"
                            FillBehavior="HoldEnd">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame Value="0" />
                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.2">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame Value="0" />
                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.2">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FadeOut">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame Value="1" />
                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.2">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame Value="1" />
                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.2">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </Style.Resources>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoading}" Value="true">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="FadeOut" />
                                <BeginStoryboard Storyboard="{StaticResource FadeIn}" Name="FadeIn" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLoading}" Value="false">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="FadeIn" />
                                <BeginStoryboard Storyboard="{StaticResource FadeOut}" Name="FadeOut" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </md:Card.Style>
        </md:Card>
    </Grid>
</mvvm:MvxWpfView>
